function GetQueryString(name) {
    //获取URL中的参数
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return unescape(r[2]);
    return null;
}

function addcookie(name, value, expireHours) {
    var cookieString = name + "=" + escape(value) + "; path=/";
    //判断是否设置过期时间
    if (expireHours > 0) {
        var date = new Date();
        date.setTime(date.getTime + expireHours * 3600 * 1000);
        cookieString = cookieString + "; expire=" + date.toGMTString();
    }
    document.cookie = cookieString;
}

function getcookie(name) {
    var strcookie = document.cookie;
    var arrcookie = strcookie.split("; ");
    for (var i = 0; i < arrcookie.length; i++) {
        var arr = arrcookie[i].split("=");
        if (arr[0] == name) return arr[1];
    }
    return "";
}

function delCookie(name) { //删除cookie
    var exp = new Date();
    exp.setTime(exp.getTime() - 1);
    var cval = getcookie(name);
    if (cval != null) document.cookie = name + "=" + cval + "; path=/;expires=" + exp.toGMTString();
}


function is_weixn() {
    var ua = navigator.userAgent.toLowerCase();
    if (ua.match(/MicroMessenger/i) == "micromessenger") {
        return true;
    } else {
        return false;
    }
}

function is_weixnlogin() {
    var wxinfo = getcookie("wxinfo");
    if (wxinfo == '') {
        return false
    } else {
        return true
    }
}

function is_regkey() {
    var key = getcookie('key');
    if (key == '') {
        return false
    } else {
        return true
    }
}

function initlogin(url) {
    var hrefs = location.href;
    if (url == null) url = hrefs;
    if (is_weixn()) {
        if (is_weixnlogin()) {
            if (!is_regkey()) {
                $(window).appselect({
                    msg: "登陆超时，请重新登陆！",
                    list: [],
                    bts: ["手机账户登录", "微信登陆"],
                    yes: function () {
                        location.href = WapSiteUrl + '/login.html';
                    },
                    no: function () {
                        location.href = ApiUrl + '/index/WechatApi/?ref_url=' + escape(url);
                    }
                });
            }
        }
        else {
            location.href = ApiUrl + '/index/WechatApi/?ref_url=' + escape(url);
        }
    }
    else {
//          if (getcookie('isfirst') == "") {
//              addcookie('isfirst', true, 1);
//              $(window).appalert({
//                  tit: "温馨提醒",
//                  msg: "目前只支持微信商城购物，请加amezvip公众号，或者扫卡背面二维码进入商城购物！",
//                  btn: "返回"
//              });
//          }
    }
}


function contains(arr, str) {
    var i = arr.length;
    while (i--) {
        if (arr[i] === str) {
            return true;
        }
    }
    return false;
}

function compare(propertyName) { //数组对象排序
    return function (object1, object2) {
        var value1 = object1[propertyName];
        var value2 = object2[propertyName];
        if (value2 < value1) {
            return -1;
        } else if (value2 > value1) {
            return 1;
        } else {
            return 0;
        }
    }
}

function unique(arr) {
    var result = [], isRepeated;
    for (var i = 0, len = arr.length; i < len; i++) {
        isRepeated = false;
        for (var j = 0, len = result.length; j < len; j++) {
            if (arr[i] == result[j]) {
                isRepeated = true;
                break;
            }
        }
        if (!isRepeated) {
            result.push(arr[i]);
        }
    }
    return result;
}

function goBack() {
    window.history.back(-1);
}

function convertCanvasToImage(canvas) {
    var image = new Image();
    image.src = canvas.toDataURL("image/png");
    return image;
}

//图片预加载
function preimg() {
    $('img.pre').each(function () {
        var _src = $(this).attr("data-img");
        $(this).attr("src", _src);
    });
}

//瀑布流
function waterfall(parent, children, cols) {
    var $boxs = $(children);
    var cols = cols; //设置瀑布流列数
    var w = $('body').width(); //窗口宽度
    $(parent).width(w - 20).css('margin', '0 auto'); //设置父级宽度为窗口宽度-20px；
    var sw = $(parent).width() / 2;
    $boxs.width(sw - 10); //设置子级的宽度为＝父级宽度/2-10px；
    var hArr = [];
    $boxs.each(function (index, value) {
        var h = $boxs.eq(index).outerHeight();
        if (index < cols) {
            hArr[index] = h;
        } else {
            var minH = Math.min.apply(null, hArr);
            var minHIndex = $.inArray(minH, hArr);
            $(value).css({
                'position': 'absolute',
                'top': minH + 'px',
                'left': minHIndex * sw + 'px'
            });
            hArr[minHIndex] += $boxs.eq(index).outerHeight();
            $(parent).height(Math.max(hArr[minHIndex])); //设置父级高度；
        }
    });
    //console.log(hArr);
}

var getScript = function (file, callback) {
    var _isload = true;
    var _doc = document.getElementsByTagName('head')[0];
    var _script = document.querySelectorAll("script");
    for (var i = 0; i < _script.length; i++) {
        if (_script[i].src == file) {
            _isload = false
        }
    }
    if (_isload) {
        var js = document.createElement('script');
        js.setAttribute('type', 'text/javascript');
        js.setAttribute('src', file);
        _doc.appendChild(js);
        if (!0) {
            js.onload = function () {
                if (typeof callback === 'function') callback()
            }
        } else {
            js.onreadystatechange = function () {
                if (js.readyState == 'loaded' || js.readyState == 'complete') {
                    if (typeof callback === 'function') callback()
                }
            }
        }
    }
    return _isload
};
/*
 * 检查表单是否验证通过
 * element为form表单或父级ID/class
 */
function formValidate(element) {
    var all_input = $(element).find('input[data-validate],textarea[data-validate],select[data-validate]');
    all_input.each(function (i, e) {
        var object = $(e).closest('.form-group');
        if (!object.hasClass('check-success') && !object.hasClass('check-error')) {
            $(e).trigger('blur');
        }
    });
    var numError = $(element).find('.check-error').length;
    if (numError) {
        return false;
    } else {
        return true;
    }
}

/**
 * 增加身份证验证
 * @param num
 * @returns {boolean}
 */
function isIdCardNo(num) {
    var factorArr = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1);
    var parityBit = new Array("1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2");
    var varArray = new Array();
    var intValue;
    var lngProduct = 0;
    var intCheckDigit;
    var intStrLen = num.length;
    var idNumber = num;
    // initialize
    if ((intStrLen != 15) && (intStrLen != 18)) {
        return false;
    }
    // check and set value
    for (i = 0; i < intStrLen; i++) {
        varArray[i] = idNumber.charAt(i);
        if ((varArray[i] < '0' || varArray[i] > '9') && (i != 17)) {
            return false;
        } else if (i < 17) {
            varArray[i] = varArray[i] * factorArr[i];
        }
    }
    if (intStrLen == 18) {
        //check date
        var date8 = idNumber.substring(6, 14);
        if (isDate8(date8) == false) {
            return false;
        }
        // calculate the sum of the products
        for (i = 0; i < 17; i++) {
            lngProduct = lngProduct + varArray[i];
        }
        // calculate the check digit
        intCheckDigit = parityBit[lngProduct % 11];
        // check last digit
        if (varArray[17] != intCheckDigit) {
            return false;
        }
    } else { //length is 15
        //check date
        var date6 = idNumber.substring(6, 12);
        if (isDate6(date6) == false) {
            return false;
        }
    }
    return true;
}

function isDate6(sDate) {
    if (!/^[0-9]{6}$/.test(sDate)) {
        return false;
    }
    var year, month, day;
    year = sDate.substring(0, 4);
    month = sDate.substring(4, 6);
    if (year < 1700 || year > 2500) return false
    if (month < 1 || month > 12) return false
    return true
}

function isDate8(sDate) {
    if (!/^[0-9]{8}$/.test(sDate)) {
        return false;
    }
    var year, month, day;
    year = sDate.substring(0, 4);
    month = sDate.substring(4, 6);
    day = sDate.substring(6, 8);
    var iaMonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    if (year < 1700 || year > 2500) return false
    if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) iaMonthDays[1] = 29;
    if (month < 1 || month > 12) return false
    if (day < 1 || day > iaMonthDays[month - 1]) return false
    return true
}

function formatdates(datetime) {
    return new Date(datetime * 1000).toLocaleString()
}

Date.prototype.format = function (format) {
    var date = {
        "M+": this.getMonth() + 1,
        "d+": this.getDate(),
        "h+": this.getHours(),
        "m+": this.getMinutes(),
        "s+": this.getSeconds(),
        "q+": Math.floor((this.getMonth() + 3) / 3),
        "S+": this.getMilliseconds()
    };
    if (/(y+)/i.test(format)) {
        format = format.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length));
    }
    for (var k in date) {
        if (new RegExp("(" + k + ")").test(format)) {
            format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : ("00" + date[k]).substr(("" + date[k]).length));
        }
    }
    return format;
}

function ajaxFileUpload(key, ids, uploadChange, dir, callback) {
    if (dir == null) dir = 'evaluate';
    $.ajaxFileUpload({
        url: ApiUrl + '/index.php?act=cut&op=pic_upload&key=' + key + '&dir=' + dir + '&form_submit=ok&fileinput=' + ids,
        secureuri: false,
        fileElementId: ids,
        dataType: 'json',
        success: function (data, status) {
            if (data.status == '1') {
                $('#' + ids).prev().html("<img class='x12' src='/data/upload/shop/" + dir + "/" + data.url + "?" + Math.random() + "'>");
                $('#' + ids).next().val(data.url);
                callback();
            } else {
                alert(data.msg);
                $('#' + ids).bind('change', uploadChange);
            }
        },
        error: function (data, status, e) {
            alert('上传超时，请重选！' + '\r\n' + e);
            $('#' + ids).bind('change', uploadChange);
        }
    })
}

function replace_em(str) {
    str = str.replace(/\</g, '&lt;');
    str = str.replace(/\>/g, '&gt;');
    str = str.replace(/\n/g, '<br/>');
    str = str.replace(/\[em_([0-9]*)\]/g, '<img src="/static/arclist/$1.gif" border="0" />');
    return str;
}

initlogin();